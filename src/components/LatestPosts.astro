---
import { marked } from "marked";
import { formatPublishDate } from "../lib/utils.ts";
import "../styles/global.css";
import WiggleWrap from "./WiggleWrap.astro";
import Tag from "./Tag.astro";
const response = await fetch(
  "https://micro.blog/micropub?q=source&offset=0&limit=3",
  {
    method: "GET",
    headers: { Authorization: `Bearer ${process.env.MICROBLOG_TOKEN}` },
  }
);

let posts = await response.json();
posts = posts.items.map((post: any) => {
  post.properties.content[0] = marked(post.properties.content[0]);
  return post;
});
---

<aside id="posts" class="mx-2">
  <h2>
    <img
      src="/img/microblog.svg"
      width="24px"
      height="24px"
      class="inline"
      alt="Micro.blog Icon"
    />{" "}<WiggleWrap>Latest Posts</WiggleWrap>
  </h2>
  {
    posts.map((post: any) => (
      <article id=`${post.properties.uid[0]}`>
        <div class="flex flex-col md:flex-row justify-start gap-1 align-bottom">
          <a href=`/blog/${post.properties.uid[0]}`>
            {post.properties.name != "" && <h3>{post?.properties?.name}</h3>}
            <time class="slab" datetime={post?.properties?.published}>
              {formatPublishDate(post?.properties?.published)}
            </time>
          </a>
        </div>
        <Fragment set:html={post?.properties?.content[0]} />
        {post?.category?.length > 0 && (
          <p>
            Category:{" "}
            {post?.category.map((tag: any, i: number) => (
              <Tag tag={tag} i={i} />
            ))}
          </p>
        )}
      </article>
    ))
  }
</aside>
