---
import { getCollection } from "astro:content";
import { formatPublishDate, timeAgo } from "../lib/utils";
import "../styles/global.css";
import Tag from "./Tag.astro";
const notes = await getCollection("notes", ({ data }) => {
  return data.draft !== true;
});
---

<style>
  li {
    padding-top: 1rem;
  }
  li:not(:first-child) {
    border-top: 0.125rem var(--yellow) double;
  }
</style>

<aside id="notes" class="mx-2">
  <h2>
    <img
      src="img/plant.svg"
      width="24px"
      height="24px"
      class="inline"
      alt="Plant Icon"
    />{" "}Latest Notes
  </h2>
  <ul>
    {
      notes
        .sort((a, b) => new Date(b.data.lastmod) - new Date(a.data.lastmod))
        .slice(0, 5)
        .map((note) => (
          <li>
            <a href={`/${note.slug}`}>
              <img
                src="img/worm.svg"
                width="24px"
                height="24px"
                class="inline"
                alt="Worm Icon"
              />{" "}
              {note.data.title}
            </a>
            <p>
              <time datetime={note.data.date}>
                {formatPublishDate(note.data.date)}
              </time>
              {note.data.date !== note.data.lastmod && (
                <time
                  class="text-xs text-stone-300"
                  datetime={note.data.lastmod}
                >
                  Last Updated {timeAgo(note.data.lastmod)}
                </time>
              )}
            </p>
            {note.data.tags.length > 0 && (
              <p>
                <img
                  src="img/tags.svg"
                  width="24px"
                  height="24px"
                  class="inline"
                  alt="Tag Icon"
                />{" "}
                {note.data.tags.map((tag: any, i: number) => (
                  <Tag tag={tag} i={i} />
                ))}
              </p>
            )}
          </li>
        ))
    }
  </ul>
</aside>
